# Factory - Sorter
alias sorter d0
alias requestDownLMem d1
alias requestDownRMem d2
alias requestUpMem d3

alias requestDownL r0
alias requestDownR r1
alias requestUp r2
alias wordOr r2 # same as request up
alias occupantHash r3
alias wordA r4
alias output r5
alias wordB r6
alias needUpdate r7
alias bitOr r8
alias bitA r9
alias bitB r10
alias i r11
alias x r12

move requestDownL 0
move requestDownR 0

s sorter On 1
s sorter Mode 2
s db Setting 0

main:
sortOccupant:
ls occupantHash sorter 0 OccupantHash # skip empty
beqz occupantHash checkDownLeft
jal getOutput
s sorter Output output
checkDownLeft:
bdns requestDownLMem checkDownRight # skip unset
l x requestDownLMem Setting # x = down left mem
beq x requestDownL checkDownRight # skip unchanged
move requestDownL x
move needUpdate 1 # trigger update
checkDownRight:
bdns requestDownRMem updateRequest # skip if unset
l x requestDownRMem Setting # x = down right mem
beq x requestDownR updateRequest # skip unchanged
move requestDownR x
move needUpdate 1 # trigger update
updateRequest:
beqz needUpdate main # skip if no update triggered
move wordA requestDownL
move wordB requestDownR
jal bitwiseOr
s requestUpMem Setting requestUp
move needUpdate 0
j main

getOutput:
move i 1
beq occupantHash -404336834 extractBit # copper
move i 2
beq occupantHash 226410516 extractBit # gold
move i 4
beq occupantHash -1301215609 extractBit # iron
move i 8
beq occupantHash 2134647745 extractBit # lead
move i 16
beq occupantHash -1406385572 extractBit # nickel
move i 32
beq occupantHash -290196476 extractBit # silicon
move i 64
beq occupantHash -929742000 extractBit # silver
move i 128
beq occupantHash 1058547521 extractBit # constantan
move i 256
beq occupantHash 502280180 extractBit # electrum
move i 512
beq occupantHash -297990285 extractBit #invar
move i 1024
beq occupantHash -82508479 extractBit # solder
move i 2048
beq occupantHash -654790771 extractBit # steel
move i 4096
beq occupantHash 412924554 extractBit # astroloy
move i 8192
beq occupantHash 1579842814 extractBit # hastelloy
move i 16384
beq occupantHash -787796599 extractBit # inconel
move i 32768
beq occupantHash -1897868623 extractBit # stellite
move i 65536
beq occupantHash 156348098 extractBit # waspaloy
move output 1
j ra
extractBit:
div x requestDownR i
trunc x x
mod output x 2
#seqz output x
s db Setting output
j ra

bitwiseOr:
move wordOr 0
move i 1
bitwiseOrLoop:
mod bitA wordA 2 # get LS bit from word A
div wordA wordA 2 # right shift word A
trunc wordA wordA
mod bitB wordB 2 # get LS bit from word B
div wordB wordB 2 # right shift word B
trunc wordB wordB
or bitOr bitA bitB # or the bits
mul bitOr i bitOr # make bit a power of 2
add wordOr bitOr wordOr # add to result
mul i 2 i
bgtz wordA bitwiseOrLoop # loop if either word not 0
bgtz wordB bitwiseOrLoop
j ra
